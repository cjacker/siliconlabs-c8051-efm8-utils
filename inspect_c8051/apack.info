# Adapter pack file for Studio.
#
label=Device inspector for c8051

path=.,win32,win64,linux,macosx

# tell studio to use the part id when matching against inspect output
hwdb.partid=property.hardwareID + ":" + property.derivativeID

# board properties
apack.boardid=BoardID
apack.boardCount=BoardCount
apack.inferPart="yes"

# tell studio how to interpret inspect output
apack.serialNumber=SerialNo
apack.adapterLabel=adapterLabel + " (" + SerialNo + ")"
apack.partid=HardwareID + ":" + DerivativeID

inspector.usbVid=0x10c4
#---------------------------------------
# list of PIDs for adapters used by c8051 devices: Toolstick, EC3, UDA
# This would limit this inspector to work only for c8051 devices, not for 8051-based
# fix function devices (ffd) that have the same VID but different PID.
#--------------------------------------- 
inspector.usbPid=0x8253,0x8044,0x8045

inspector.delay=500

executable(device8051:linux.x86_64) {
  exe=device8051
  lib=libslab8051.so
  lib=libslabhiddevice.so
}

executable(device8051:linux.x86) {
  exe=device8051
  lib=libslab8051.so
  lib=libslabhiddevice.so
}

executable(device8051:win32.x86) {
  exe=device8051.exe
  lib=slab8051.dll
  lib=slabhiddevice.dll
  lib=libgcc_s_dw2-1.dll
  lib=libstdc++-6.dll
  lib=mingwm10.dll
}

executable(device8051:win32.x86_64) {
  exe=device8051.exe
  lib=slab8051.dll
  lib=slabhiddevice.dll
  lib=libgcc_s_seh-1.dll
  lib=libstdc++-6.dll
  lib=libwinpthread-1.dll
}

executable(device8051:macosx.x86_64) {
  exe=device8051
  lib=libslab8051.dylib
  lib=libslabhiddevice.dylib
}

function(help) {
  cmd=$(device8051) -?
}

function(inspect) {
  cmd=$(device8051) -slist [ -sn ${sn} ] [ -vid ${vid} ] [ -pid ${pid} ]
}
